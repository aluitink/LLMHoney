name: Release

on:
  push:
    tags: [ 'v*' ]

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: 'src/LLMHoney.Host/LLMHoney.Host.csproj'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [win-x64, linux-x64]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore LLMHoney.sln
    
    - name: Build
      run: dotnet build LLMHoney.sln --no-restore --configuration Release
    
    - name: Test
      run: dotnet test LLMHoney.sln --no-build --configuration Release --verbosity normal
    
    - name: Publish ${{ matrix.runtime }}
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --runtime ${{ matrix.runtime }} \
          --self-contained true \
          --output ./publish/${{ matrix.runtime }} \
          -p:PublishSingleFile=true \
          -p:PublishTrimmed=true \
          -p:TrimMode=partial
    
    - name: Create artifact name
      id: artifact
      run: |
        if [ "${{ matrix.runtime }}" = "win-x64" ]; then
          echo "name=LLMHoney-${{ matrix.runtime }}.exe" >> $GITHUB_OUTPUT
          echo "path=./publish/${{ matrix.runtime }}/LLMHoney.Host.exe" >> $GITHUB_OUTPUT
        else
          echo "name=LLMHoney-${{ matrix.runtime }}" >> $GITHUB_OUTPUT
          echo "path=./publish/${{ matrix.runtime }}/LLMHoney.Host" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.artifact.outputs.name }}
        path: ${{ steps.artifact.outputs.path }}
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Display structure of downloaded files
      run: ls -la ./artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./artifacts/LLMHoney-win-x64.exe/LLMHoney.Host.exe
          ./artifacts/LLMHoney-linux-x64/LLMHoney.Host
        body: |
          ## LLMHoney Release ${{ github.ref_name }}
          
          ### Downloads
          - **Windows (x64)**: LLMHoney.Host.exe
          - **Linux (x64)**: LLMHoney.Host
          
          ### Installation
          
          #### Windows
          1. Download `LLMHoney.Host.exe`
          2. Create an `appsettings.json` file with your Azure OpenAI configuration (see sample that will be extracted on first run)
          3. Run the executable: `LLMHoney.Host.exe`
          
          #### Linux
          1. Download `LLMHoney.Host`
          2. Make it executable: `chmod +x LLMHoney.Host`
          3. Create an `appsettings.json` file with your Azure OpenAI configuration (see sample that will be extracted on first run)
          4. Run: `./LLMHoney.Host`
          
          ### Configuration
          
          On first run, the application will automatically extract:
          - Default honeypot configurations to `./configs/` directory
          - Sample `appsettings.sample.json` file for reference
          
          You only need to create your own `appsettings.json` with your Azure OpenAI credentials.
          
          ### Changes
          See commit history for detailed changes.
        draft: false
        prerelease: false
